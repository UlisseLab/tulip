# SPDX-FileCopyrightText: 2019 Emiliano Ciavatta <emiliano.ciavatta@studio.unibo.it>
# SPDX-FileCopyrightText: 2022 - 2024 Rick de Jager <rickdejager99@gmail.com>
# SPDX-FileCopyrightText: 2022 moritz <moritsch@student.ethz.ch>
# SPDX-FileCopyrightText: 2023 - 2024 gfelber <34159565+gfelber@users.noreply.github.com>
# SPDX-FileCopyrightText: 2023 liskaant <liskaant@gmail.com>
# SPDX-FileCopyrightText: 2023 meme-lord <meme-lord@users.noreply.github.com>
# SPDX-FileCopyrightText: 2024 Eyad Issa <eyadlorenzo@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-only

services:
  frontend:
    build: frontend
    image: tulip-frontend:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - api
    environment:
      API_SERVER_ENDPOINT: http://api:5000/

  api:
    build:
      context: services/
      target: api
    restart: unless-stopped
    depends_on:
      - mongo

    volumes:
      - ${TRAFFIC_DIR}:/traffic:ro
    environment:
      TULIP_MONGO: mongo:27017
      TULIP_TRAFFIC_DIR: /traffic
      FLAG_REGEX: ${FLAG_REGEX}
      TICK_START: ${TICK_START}
      TICK_LENGTH: ${TICK_LENGTH}
      VM_IP: ${VM_IP}
      GAME_SERVICES: ${GAME_SERVICES}

  assembler:
    build:
      context: services/
      target: assembler
    volumes:
      - ${TRAFFIC_DIR}:/traffic:ro
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      TULIP_WATCH_DIR: /traffic
      TULIP_MONGO: mongo:27017
      TULIP_FLAG: ${FLAG_REGEX}
      TULIP_FLUSH_INTERVAL: ${ASSEMBLER_FLUSH_INTERVAL}
      TULIP_CONNECTION_TIMEOUT: ${ASSEMBLER_CONNECTION_TIMEOUT}
      TULIP_TCP_LAZY: ${ASSEMBLER_TCP_LAZY}
      TULIP_EXPERIMENTAL: ${ASSEMBLER_EXPERIMENTAL}
      TULIP_NONSTRICT: ${ASSEMBLER_NONSTRICT}

  ingestor:
    build:
      context: services/
      target: ingestor
    restart: unless-stopped
    ports:
      - "${INGESTOR_ADDR}:9999"
    volumes:
      - ${TRAFFIC_DIR}:/traffic
    environment:
      TULIP_DEST_DIR: /traffic
      TULIP_ROTATE_INTERVAL: "${INGESTOR_ROTATE}"

  enricher:
    build:
      context: services/
      target: enricher
    restart: unless-stopped
    depends_on:
      - mongo
      - redis
    environment:
      TULIP_MONGO: mongo:27017
      TULIP_REDIS: redis://redis:6379

  mcp:
    build:
      context: services/
      target: mcp
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - "8080:8080"
    environment:
      MONGO_HOST: mongo:27017

  suricata:
    build: services/suricata
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - ./suricata.rules:/var/lib/suricata/rules/suricata.rules:ro
      - ${TRAFFIC_DIR}:/traffic:ro
    environment:
      WATCH_DIR: /traffic
      REDIS_HOST: redis
      REDIS_PORT: 6379

    tty: true

  redis:
    hostname: redis
    image: redis:8
    restart: unless-stopped

  mongo:
    image: mongo:8
    restart: unless-stopped
    ports:
      - "127.0.0.1:27017:27017" # Only expose to localhost

  flagid:
    build:
      context: services/flagid
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      MONGO_URI: mongodb://mongo:27017/
      FLAGID_DB: pcap
      FLAGID_COLLECTION: flagids
      FLAGID_URL: http://host.docker.internal:8081/flagId
      FLAGID_FETCH_INTERVAL: 60
