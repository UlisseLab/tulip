name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  go-importer:
    name: Go Importer
    runs-on: ubuntu-latest

    env:
      WDIR: services/

    steps:
      - uses: actions/checkout@v4

      - name: Install pcap-dev
        run: |
          sudo apt-get update && \
          sudo apt-get install -y libpcap-dev

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache-dependency-path: "**/*.sum"

      - name: Install dependencies
        run: go mod download -x
        working-directory: ${{ env.WDIR }}

      - name: Build
        run: go build -v ./...
        working-directory: ${{ env.WDIR }}

      - name: Run tests
        run: go test -v ./...
        working-directory: ${{ env.WDIR }}

  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "current"

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install
        working-directory: frontend

      - name: Build
        run: yarn build
        working-directory: frontend

  compose:
    name: Compose
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Copy .env file
        run: cp .env.example .env

      - name: Build and push Docker images
        run: |
          docker compose build --pull
